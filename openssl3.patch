--- conf.h.sav	2020-05-02 08:36:38.880690000 -0700
+++ conf.h	2020-04-03 13:13:12.140750000 -0700
@@ -33,9 +33,6 @@ typedef struct {
     char *value;
 } CONF_VALUE;
 
-DEFINE_OR_DECLARE_STACK_OF(CONF_VALUE)
-DEFINE_OR_DECLARE_STACK_OF(CONF_MODULE)
-
 DEFINE_LHASH_OF(CONF_VALUE);
 
 struct conf_st;
@@ -59,6 +56,9 @@ struct conf_method_st {
 
 typedef struct conf_imodule_st CONF_IMODULE;
 typedef struct conf_module_st CONF_MODULE;
+
+DEFINE_OR_DECLARE_STACK_OF(CONF_VALUE)
+DEFINE_OR_DECLARE_STACK_OF(CONF_MODULE)
 
 STACK_OF(CONF_IMODULE);
 
--- ssl.h.sav	2020-05-02 08:36:44.543950000 -0700
+++ ssl.h	2020-05-02 08:37:15.179047000 -0700
@@ -230,16 +230,15 @@ typedef struct tls_sigalgs_st TLS_SIGALGS;
 typedef struct ssl_conf_ctx_st SSL_CONF_CTX;
 typedef struct ssl_comp_st SSL_COMP;
 
-DEFINE_OR_DECLARE_STACK_OF(SSL_CIPHER)
-DEFINE_OR_DECLARE_STACK_OF(SSL_COMP)
-DEFINE_OR_DECLARE_STACK_OF(SRTP_PROTECTION_PROFILE)
-DEFINE_OR_DECLARE_STACK_OF(SSL_COMP)
-
 /* SRTP protection profiles for use with the use_srtp extension (RFC 5764)*/
 typedef struct srtp_protection_profile_st {
     const char *name;
     unsigned long id;
 } SRTP_PROTECTION_PROFILE;
+
+DEFINE_OR_DECLARE_STACK_OF(SSL_CIPHER)
+DEFINE_OR_DECLARE_STACK_OF(SSL_COMP)
+DEFINE_OR_DECLARE_STACK_OF(SRTP_PROTECTION_PROFILE)
 
 
 typedef int (*tls_session_ticket_ext_cb_fn)(SSL *s, const unsigned char *data,
--- x509v3.h.sav	2020-05-02 08:36:55.891210000 -0700
+++ x509v3.h	2020-05-02 08:37:15.179843000 -0700
@@ -25,25 +25,6 @@
 extern "C" {
 #endif
 
-DEFINE_OR_DECLARE_STACK_OF(GENERAL_NAME)
-DEFINE_OR_DECLARE_STACK_OF(X509V3_EXT_METHOD)
-DEFINE_OR_DECLARE_STACK_OF(GENERAL_NAMES)
-DEFINE_OR_DECLARE_STACK_OF(ACCESS_DESCRIPTION)
-DEFINE_OR_DECLARE_STACK_OF(DIST_POINT)
-DEFINE_OR_DECLARE_STACK_OF(SXNETID)
-DEFINE_OR_DECLARE_STACK_OF(POLICYQUALINFO)
-DEFINE_OR_DECLARE_STACK_OF(POLICYINFO)
-DEFINE_OR_DECLARE_STACK_OF(POLICY_MAPPING)
-DEFINE_OR_DECLARE_STACK_OF(GENERAL_SUBTREE)
-DEFINE_OR_DECLARE_STACK_OF(X509_PURPOSE)
-DEFINE_OR_DECLARE_STACK_OF(X509_POLICY_NODE)
-DEFINE_OR_DECLARE_STACK_OF(ASIdOrRange)
-DEFINE_OR_DECLARE_STACK_OF(IPAddressOrRange)
-DEFINE_OR_DECLARE_STACK_OF(IPAddressFamily)
-DEFINE_OR_DECLARE_STACK_OF(ASN1_STRING)
-DEFINE_OR_DECLARE_STACK_OF(ADMISSIONS)
-DEFINE_OR_DECLARE_STACK_OF(PROFESSION_INFO)
-
 /* Forward reference */
 struct v3_ext_method;
 struct v3_ext_ctx;
@@ -892,6 +873,25 @@ DECLARE_ASN1_FUNCTIONS(PROFESSION_INFO)
 DECLARE_ASN1_FUNCTIONS(ADMISSIONS)
 DECLARE_ASN1_FUNCTIONS(ADMISSION_SYNTAX)
 typedef STACK_OF(PROFESSION_INFO) PROFESSION_INFOS;
+
+DEFINE_OR_DECLARE_STACK_OF(GENERAL_NAME)
+DEFINE_OR_DECLARE_STACK_OF(X509V3_EXT_METHOD)
+DEFINE_OR_DECLARE_STACK_OF(GENERAL_NAMES)
+DEFINE_OR_DECLARE_STACK_OF(ACCESS_DESCRIPTION)
+DEFINE_OR_DECLARE_STACK_OF(DIST_POINT)
+DEFINE_OR_DECLARE_STACK_OF(SXNETID)
+DEFINE_OR_DECLARE_STACK_OF(POLICYQUALINFO)
+DEFINE_OR_DECLARE_STACK_OF(POLICYINFO)
+DEFINE_OR_DECLARE_STACK_OF(POLICY_MAPPING)
+DEFINE_OR_DECLARE_STACK_OF(GENERAL_SUBTREE)
+DEFINE_OR_DECLARE_STACK_OF(X509_PURPOSE)
+DEFINE_OR_DECLARE_STACK_OF(X509_POLICY_NODE)
+DEFINE_OR_DECLARE_STACK_OF(ASIdOrRange)
+DEFINE_OR_DECLARE_STACK_OF(IPAddressOrRange)
+DEFINE_OR_DECLARE_STACK_OF(IPAddressFamily)
+DEFINE_OR_DECLARE_STACK_OF(ASN1_STRING)
+DEFINE_OR_DECLARE_STACK_OF(ADMISSIONS)
+DEFINE_OR_DECLARE_STACK_OF(PROFESSION_INFO)
 
 const ASN1_OBJECT *NAMING_AUTHORITY_get0_authorityId(
     const NAMING_AUTHORITY *n);
